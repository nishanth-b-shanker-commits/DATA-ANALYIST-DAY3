<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Max Price' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='Min Price' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='Top N' datatype='integer' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='car_prices (car_prices)' inline='true' name='federated.08fqj1804nft1p1h84aib1tljaox' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='car_prices' name='excel-direct.0ymm2j21csxlbq18qlsv10d0d772'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Download/car_prices.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ymm2j21csxlbq18qlsv10d0d772' name='car_prices' table='[car_prices$]' type='table'>
          <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='make' ordinal='1' />
            <column datatype='string' name='model' ordinal='2' />
            <column datatype='string' name='trim' ordinal='3' />
            <column datatype='string' name='body' ordinal='4' />
            <column datatype='string' name='transmission' ordinal='5' />
            <column datatype='string' name='vin' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='integer' name='condition' ordinal='8' />
            <column datatype='integer' name='odometer' ordinal='9' />
            <column datatype='string' name='color' ordinal='10' />
            <column datatype='string' name='interior' ordinal='11' />
            <column datatype='string' name='seller' ordinal='12' />
            <column datatype='integer' name='mmr' ordinal='13' />
            <column datatype='integer' name='sellingprice' ordinal='14' />
            <column datatype='datetime' name='saledate' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[car_prices]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P10001:no:A1:P10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>make</remote-name>
            <remote-type>130</remote-type>
            <local-name>[make]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>make</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>130</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trim</remote-name>
            <remote-type>130</remote-type>
            <local-name>[trim]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>trim</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body</remote-name>
            <remote-type>130</remote-type>
            <local-name>[body]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>body</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transmission</remote-name>
            <remote-type>130</remote-type>
            <local-name>[transmission]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>transmission</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[vin]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>vin</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>odometer</remote-name>
            <remote-type>20</remote-type>
            <local-name>[odometer]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>odometer</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>color</remote-name>
            <remote-type>130</remote-type>
            <local-name>[color]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>color</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>interior</remote-name>
            <remote-type>130</remote-type>
            <local-name>[interior]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>interior</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller</remote-name>
            <remote-type>130</remote-type>
            <local-name>[seller]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>seller</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mmr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mmr]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>mmr</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellingprice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sellingprice]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>sellingprice</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>saledate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[saledate]</local-name>
            <parent-name>[car_prices]</parent-name>
            <remote-alias>saledate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Gross profit' datatype='integer' name='[Calculation_2151594779265699840]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[sellingprice]-[mmr]' />
      </column>
      <column caption='sales year' datatype='integer' name='[Calculation_2151594779266015233]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;year&apos;, [saledate])' />
      </column>
      <column caption='Sale Month (truncated)' datatype='datetime' name='[Calculation_2151594779266080770]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETRUNC(&apos;month&apos;, [saledate])' />
      </column>
      <column caption='unit sold' datatype='integer' name='[Calculation_2151594779266154499]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([vin])' />
      </column>
      <column caption='AVG selling price' datatype='real' name='[Calculation_2151594779266228228]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([sellingprice])' />
      </column>
      <column caption='Total Sales' datatype='integer' name='[Calculation_2151594779266310149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sellingprice])' />
      </column>
      <column caption='Total Profit' datatype='integer' name='[Calculation_2151594779266428934]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([sellingprice]-[mmr])' />
      </column>
      <column caption='Profit Margin %' datatype='real' name='[Calculation_2151594779266506759]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([sellingprice]) = 0 THEN 0&#13;&#10;ELSE SUM([sellingprice] - [mmr]) / SUM([sellingprice]) END' />
      </column>
      <column caption='Sales MoM % (table calc)' datatype='real' name='[Calculation_2151594779266560008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([sellingprice]) - LOOKUP(SUM([sellingprice]), -1)) / ABS(LOOKUP(SUM([sellingprice]), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sales YoY % (table calc)' datatype='real' name='[Calculation_2151594779266633737]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([sellingprice]) - LOOKUP(SUM([sellingprice]), -1)) / ABS(LOOKUP(SUM([sellingprice]), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rolling 12M Sales' datatype='integer' name='[Calculation_2151594779266682890]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([sellingprice]), -11, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='3M Moving Avg Sales' datatype='real' name='[Calculation_2151594779266801675]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([sellingprice]), -2, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sales Prior Period (table calc)' datatype='integer' name='[Calculation_2151594779266875404]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOOKUP(SUM([sellingprice]), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Top N Rank (Models)' datatype='integer' name='[Calculation_2151594779267178509]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([sellingprice]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='In Price Range' datatype='boolean' name='[Calculation_2151594779268218895]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[sellingprice] &gt;= [Parameters].[Parameter 2] AND [sellingprice] &lt;= [Parameters].[Parameter 1]' />
      </column>
      <column caption='KPI Title (dynamic)' datatype='string' name='[Calculation_2151594779268571152]' role='measure' type='nominal'>
        <calculation class='tableau' formula='&quot;Sales: $&quot; + STR(INT(SUM([sellingprice]))) &#13;&#10;+ &quot;   Profit: $&quot; + STR(INT(SUM([sellingprice]-[mmr])))&#13;&#10;+ &quot;   Margin: &quot; + STR(ROUND(100 * (SUM([sellingprice]-[mmr]) / SUM([sellingprice])),1)) + &quot;%&quot;' />
      </column>
      <column caption='Sales by Year (LOD)' datatype='integer' name='[Calculation_2151594779268653073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [year] : SUM([sellingprice]) }' />
      </column>
      <column caption='Odometer (bin)' datatype='integer' name='[Odometer (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[odometer]' peg='0' size='10042' />
      </column>
      <column caption='car_prices' datatype='table' name='[__tableau_internal_object_id__].[car!prices_C3319ADC822C493DB835ED20849C1FF3]' role='measure' type='quantitative' />
      <column caption='Body' datatype='string' name='[body]' role='dimension' type='nominal' />
      <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
      <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
      <column caption='Interior' datatype='string' name='[interior]' role='dimension' type='nominal' />
      <column caption='Make' datatype='string' name='[make]' role='dimension' type='nominal' />
      <column caption='Mmr' datatype='integer' name='[mmr]' role='measure' type='quantitative' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column caption='Odometer' datatype='integer' name='[odometer]' role='measure' type='quantitative' />
      <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
      <column caption='Seller' datatype='string' name='[seller]' role='dimension' type='nominal' />
      <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Transmission' datatype='string' name='[transmission]' role='dimension' type='nominal' />
      <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
      <column caption='Vin' datatype='string' name='[vin]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/USER/AppData/Local/Temp/TableauTemp/#TableauTemp_1u3rp6x06gd50p19dkcby1lc87at.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/25/2025 04:18:21 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>car_prices</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>make</remote-name>
              <remote-type>129</remote-type>
              <local-name>[make]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>make</remote-alias>
              <ordinal>1</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>model</remote-alias>
              <ordinal>2</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1641</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trim</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trim]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trim</remote-alias>
              <ordinal>3</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2808</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>body</remote-name>
              <remote-type>129</remote-type>
              <local-name>[body]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>body</remote-alias>
              <ordinal>4</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>transmission</remote-name>
              <remote-type>129</remote-type>
              <local-name>[transmission]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>transmission</remote-alias>
              <ordinal>5</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[vin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vin</remote-alias>
              <ordinal>6</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>546976</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>condition</remote-name>
              <remote-type>20</remote-type>
              <local-name>[condition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>condition</remote-alias>
              <ordinal>8</ordinal>
              <family>car_prices</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>odometer</remote-name>
              <remote-type>20</remote-type>
              <local-name>[odometer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>odometer</remote-alias>
              <ordinal>9</ordinal>
              <family>car_prices</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>246692</approx-count>
              <contains-null>true</contains-null>
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[color]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>color</remote-alias>
              <ordinal>10</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>interior</remote-name>
              <remote-type>129</remote-type>
              <local-name>[interior]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>interior</remote-alias>
              <ordinal>11</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seller]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller</remote-alias>
              <ordinal>12</ordinal>
              <family>car_prices</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12171</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mmr</remote-name>
              <remote-type>20</remote-type>
              <local-name>[mmr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mmr</remote-alias>
              <ordinal>13</ordinal>
              <family>car_prices</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2759</approx-count>
              <contains-null>true</contains-null>
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sellingprice</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sellingprice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sellingprice</remote-alias>
              <ordinal>14</ordinal>
              <family>car_prices</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1965</approx-count>
              <contains-null>true</contains-null>
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>saledate</remote-name>
              <remote-type>135</remote-type>
              <local-name>[saledate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>saledate</remote-alias>
              <ordinal>15</ordinal>
              <family>car_prices</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5855</approx-count>
              <contains-null>true</contains-null>
              <object-id>[car!prices_C3319ADC822C493DB835ED20849C1FF3]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Max Price' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='Min Price' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='car_prices' id='car!prices_C3319ADC822C493DB835ED20849C1FF3'>
            <properties context=''>
              <relation connection='excel-direct.0ymm2j21csxlbq18qlsv10d0d772' name='car_prices' table='[car_prices$]' type='table'>
                <columns gridOrigin='A1:P10001:no:A1:P10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='string' name='make' ordinal='1' />
                  <column datatype='string' name='model' ordinal='2' />
                  <column datatype='string' name='trim' ordinal='3' />
                  <column datatype='string' name='body' ordinal='4' />
                  <column datatype='string' name='transmission' ordinal='5' />
                  <column datatype='string' name='vin' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='integer' name='condition' ordinal='8' />
                  <column datatype='integer' name='odometer' ordinal='9' />
                  <column datatype='string' name='color' ordinal='10' />
                  <column datatype='string' name='interior' ordinal='11' />
                  <column datatype='string' name='seller' ordinal='12' />
                  <column datatype='integer' name='mmr' ordinal='13' />
                  <column datatype='integer' name='sellingprice' ordinal='14' />
                  <column datatype='datetime' name='saledate' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Inventory health (histogram)'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Odometer (bin)' datatype='integer' name='[Odometer (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[odometer]' peg='0' size='10042' />
            </column>
            <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
            <column-instance column='[Odometer (bin)]' derivation='None' name='[none:Odometer (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Odometer' datatype='integer' name='[odometer]' role='measure' type='quantitative' />
            <column-instance column='[condition]' derivation='Sum' name='[sum:condition:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.08fqj1804nft1p1h84aib1tljaox].[sum:condition:qk]</rows>
        <cols>[federated.08fqj1804nft1p1h84aib1tljaox].[none:Odometer (bin):ok]</cols>
        <show-full-range>
          <column>[federated.08fqj1804nft1p1h84aib1tljaox].[Odometer (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{148B9BC2-BB81-461C-AF98-D3F574DD928A}' />
    </worksheet>
    <worksheet name='Profit Margin'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Benton Sans Book'>Profit Margin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_2151594779266506759]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([sellingprice]) = 0 THEN 0&#13;&#10;ELSE SUM([sellingprice] - [mmr]) / SUM([sellingprice]) END' />
            </column>
            <column caption='Mmr' datatype='integer' name='[mmr]' role='measure' type='quantitative' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2151594779266506759]' derivation='User' name='[usr:Calculation_2151594779266506759:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='auto' />
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='4' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266506759:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4FB4CF55-C451-47A5-A21C-B6C2E07BEE8F}' />
    </worksheet>
    <worksheet name='Profit vs MMR scatter'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Gross profit' datatype='integer' name='[Calculation_2151594779265699840]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[sellingprice]-[mmr]' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_2151594779266506759]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([sellingprice]) = 0 THEN 0&#13;&#10;ELSE SUM([sellingprice] - [mmr]) / SUM([sellingprice]) END' />
            </column>
            <column caption='Mmr' datatype='integer' name='[mmr]' role='measure' type='quantitative' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2151594779265699840]' derivation='Sum' name='[sum:Calculation_2151594779265699840:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mmr]' derivation='Sum' name='[sum:mmr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sellingprice]' derivation='Sum' name='[sum:sellingprice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151594779266506759]' derivation='User' name='[usr:Calculation_2151594779266506759:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.08fqj1804nft1p1h84aib1tljaox].[sum:Calculation_2151594779265699840:qk]' value='88' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.08fqj1804nft1p1h84aib1tljaox].[sum:sellingprice:qk]' />
              <color column='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266506759:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.08fqj1804nft1p1h84aib1tljaox].[sum:Calculation_2151594779265699840:qk]</rows>
        <cols>[federated.08fqj1804nft1p1h84aib1tljaox].[sum:mmr:qk]</cols>
      </table>
      <simple-id uuid='{4B2FBF55-1526-4DC9-8987-7C0660993C28}' />
    </worksheet>
    <worksheet name='Sales Trend (line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Sale Month (truncated)' datatype='datetime' name='[Calculation_2151594779266080770]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATETRUNC(&apos;month&apos;, [saledate])' />
            </column>
            <column caption='Total Sales' datatype='integer' name='[Calculation_2151594779266310149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sellingprice])' />
            </column>
            <column caption='3M Moving Avg Sales' datatype='real' name='[Calculation_2151594779266801675]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([sellingprice]), -2, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2151594779266310149]' derivation='User' name='[usr:Calculation_2151594779266310149:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2151594779266801675]' derivation='User' name='[usr:Calculation_2151594779266801675:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_2151594779266080770]' derivation='Year' name='[yr:Calculation_2151594779266080770:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266801675:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08fqj1804nft1p1h84aib1tljaox].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266310149:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08fqj1804nft1p1h84aib1tljaox].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266801675:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08fqj1804nft1p1h84aib1tljaox].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266310149:qk] + [federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266801675:qk])</rows>
        <cols>[federated.08fqj1804nft1p1h84aib1tljaox].[yr:Calculation_2151594779266080770:ok]</cols>
      </table>
      <simple-id uuid='{B2EE140B-4DC3-4A14-8811-B67BAC0BA40A}' />
    </worksheet>
    <worksheet name='Sales YoY % (bar or line)'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Sales YoY % (table calc)' datatype='real' name='[Calculation_2151594779266633737]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([sellingprice]) - LOOKUP(SUM([sellingprice]), -1)) / ABS(LOOKUP(SUM([sellingprice]), -1))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2151594779266633737]' derivation='User' name='[usr:Calculation_2151594779266633737:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266633737:qk]</rows>
        <cols>[federated.08fqj1804nft1p1h84aib1tljaox].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{E43156BE-1497-4915-91AE-016DF9C9C87B}' />
    </worksheet>
    <worksheet name='Sales by Make (bar)'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Total Sales' datatype='integer' name='[Calculation_2151594779266310149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sellingprice])' />
            </column>
            <column caption='Make' datatype='string' name='[make]' role='dimension' type='nominal' />
            <column-instance column='[make]' derivation='None' name='[none:make:nk]' pivot='key' type='nominal' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2151594779266310149]' derivation='User' name='[usr:Calculation_2151594779266310149:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266310149:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266310149:qk]</rows>
        <cols>[federated.08fqj1804nft1p1h84aib1tljaox].[none:make:nk]</cols>
      </table>
      <simple-id uuid='{BC618140-25C7-4BC6-B232-E67BDFB6C5A1}' />
    </worksheet>
    <worksheet name='TOTAL SALES'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Benton Sans Book'>Total Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Total Sales' datatype='integer' name='[Calculation_2151594779266310149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sellingprice])' />
            </column>
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2151594779266310149]' derivation='User' name='[usr:Calculation_2151594779266310149:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='font-size' data-class='total' value='15' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='total' value='15' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266310149:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{38DE749D-021A-4BBA-8782-20A4C96DB0A7}' />
    </worksheet>
    <worksheet name='Top N Models (parameter)'>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Total Sales' datatype='integer' name='[Calculation_2151594779266310149]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sellingprice])' />
            </column>
            <column caption='Make' datatype='string' name='[make]' role='dimension' type='nominal' />
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column-instance column='[make]' derivation='None' name='[none:make:nk]' pivot='key' type='nominal' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2151594779266310149]' derivation='User' name='[usr:Calculation_2151594779266310149:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08fqj1804nft1p1h84aib1tljaox].[none:make:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_2151594779266310149]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08fqj1804nft1p1h84aib1tljaox].[none:model:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_2151594779266310149]' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;1&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;1 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;1500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;190-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;2 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;200sx&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;2500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;3 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;3 series gran turismo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;300-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;300zx&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;320i&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;323i&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;328i&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;3500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;350z&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;370z&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;4 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;4 series gran coupe&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;400-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;420-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;4runner&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;5 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;5 series gran turismo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;500-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;6 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;6 series gran coupe&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;7&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;7 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;750i&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;750li&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;750lxi&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;8 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;accord&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;accord crosstour&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;accord hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;activehybrid 5&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;activehybrid 7&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;activehybrid x6&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;alp&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;altima&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;altima hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;armada&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;aspire&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;astro&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;astro cargo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;avalanche&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;avalon&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;avalon hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;avenger&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;aveo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;b-class electric drive&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;b1500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;black diamond avalanche&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;blazer&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;c-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;c-max energi&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;c-max hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;c/k 1500 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;c/k 2500 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;c/k 3500 series&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;caliber&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;camaro&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;camry&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;camry hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;camry solara&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;caprice&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;capt&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;captiva sport&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;caravan&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cavalier&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;celica&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;challenger&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;charger&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;civic&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;civic del sol&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cl-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cla-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;classic&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;clk-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cls-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cobalt&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;colorado&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;comm&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;contour&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;corolla&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;corsica&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;corvette&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;corvette stingray&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cr-v&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cr-z&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;crosstour&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;crown&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;crown victoria&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cruze&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ct 200h&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;cube&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;dakota&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;dart&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;durango&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e-150&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e-250&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e-350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e-series van&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e-series wagon&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e150&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e250&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;e350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;echo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;econoline cargo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;econoline wagon&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;edge&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;element&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;equinox&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;es 300&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;es 300h&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;es 330&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;es 350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;escape&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;escape hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;escort&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ex&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ex35&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;excurs&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;excursion&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;expedit&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;expedition&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;expedition el&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;expeditn&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;explorer&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;explorer sport&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;explorer sport trac&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;express&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;express cargo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f-150&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f-150 heritage&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f-150 svt lightning&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f-250&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f-250 super duty&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f-350 super duty&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f-450 super duty&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f150&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f250&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;f350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fiesta&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fit&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;five hundred&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fj cruiser&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;flex&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;focus&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;focus st&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;freestar&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;freestyle&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;frontier&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fusion&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fusion energi&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fusion hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fx&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fx35&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fx45&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;fx50&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g convertible&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g coupe&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g sedan&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g1500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g20&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g2500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g35&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g3500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g37&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g37 convertible&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;g37 coupe&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gl-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gla-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;glk-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gr&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;grand&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;grand caravan&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gs 300&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gs 350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gs 400&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gs 430&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gs 450h&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gs 460&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gt-r&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gx&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gx 460&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;gx 470&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;hhr&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;highlander&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;highlander hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;hs 250h&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;i30&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;i35&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;i8&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;impala&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;impala limited&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;insight&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;intrepid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;is 250&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;is 250 c&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;is 300&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;is 350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;is 350 c&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;is f&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;j30&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;journey&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;juke&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;jx&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;land cruiser&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;leaf&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ls 400&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ls 430&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ls 460&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ls 600h l&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;lumina&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;lx&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;lx 450&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;lx 470&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;lx 570&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m3&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m35&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m37&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m4&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m45&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m5&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m56&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m6&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;m6 gran coupe&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;magnum&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;malibu&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;malibu classic&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;malibu hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;malibu maxx&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;matrix&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;maxima&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ml55 amg&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;monte carlo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;mr2 spyder&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;murano&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;murano crosscabriolet&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;mustang&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;mustang svt cobra&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;neon&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;nitro&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;nv&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;nv cargo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;nv passenger&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;nv200&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;odyssey&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;paseo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;passport&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;pathfind&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;pathfinder&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;pickup&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;pilot&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;police&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;prelude&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;previa&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;prius&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;prius c&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;prius plug-in&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;prius v&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;prizm&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;q45&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;q50&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;q60 convertible&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;q60 coupe&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;q70&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;quest&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;qx&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;qx4&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;qx50&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;qx56&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;qx60&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;qx70&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;qx80&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;r-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ram&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ram cargo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ram pickup 1500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ram pickup 2500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ram pickup 3500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ram van&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ram3500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ranger&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rav4&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rc 350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rc f&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ridgelin&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ridgeline&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rogue&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rogue select&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rx 300&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rx 330&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rx 350&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rx 400h&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;rx 450h&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;s-10&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;s-10 blazer&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;s-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;s10&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;s2000&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sc 300&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sc 400&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sc 430&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sentra&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sequoia&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;shelby gt500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sienna&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 1500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 1500 classic&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 1500 hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 1500hd&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 2500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 2500hd&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 2500hd classic&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 3500&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 3500 classic&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;silverado 3500hd&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sl-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;slk-class&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sls amg&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sls amg gt&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sonic&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;spark&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;spark ev&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;spirit&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sprinter&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;sprinter cargo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ss&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;ssr&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;stratus&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;suburban&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;t100&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;tacoma&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;tahoe&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;tahoe hybrid&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;tahoe limited/z71&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;taurus&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;taurus x&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;tempo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;tercel&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;thunderbird&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;titan&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;tracker&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;trailblazer&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;trailblazer ext&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;transit connect&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;transit van&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;transit wagon&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;traverse&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;truck&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;tundra&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;unknown&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;uplander&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;uplandr&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;venture&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;venza&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;versa&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;versa note&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;viper&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;volt&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;windstar&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;windstar cargo&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;x-trail&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;x1&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;x3&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;x4&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;x5&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;x5 m&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;x6&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;x6 m&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;xterra&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;yaris&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;z3&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;z4&quot;' />
                  <groupfilter function='member' level='[none:model:nk]' member='&quot;z4 m&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08fqj1804nft1p1h84aib1tljaox].[none:make:nk]</column>
            <column>[federated.08fqj1804nft1p1h84aib1tljaox].[none:model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.08fqj1804nft1p1h84aib1tljaox].[none:make:nk] / [federated.08fqj1804nft1p1h84aib1tljaox].[none:model:nk])</rows>
        <cols>[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266310149:qk]</cols>
      </table>
      <simple-id uuid='{38DE8F02-FF7E-4854-A9E6-D0E76E7FA517}' />
    </worksheet>
    <worksheet name='Total Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Benton Sans Book'>Total profit</run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='Total Profit' datatype='integer' name='[Calculation_2151594779266428934]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([sellingprice]-[mmr])' />
            </column>
            <column caption='Mmr' datatype='integer' name='[mmr]' role='measure' type='quantitative' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2151594779266428934]' derivation='User' name='[usr:Calculation_2151594779266428934:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='4' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266428934:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DA39A0FF-58FE-449C-8485-C2B5C703662F}' />
    </worksheet>
    <worksheet name='Units Sold'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Benton Sans Book'>UNIT SOLD</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='car_prices (car_prices)' name='federated.08fqj1804nft1p1h84aib1tljaox' />
          </datasources>
          <datasource-dependencies datasource='federated.08fqj1804nft1p1h84aib1tljaox'>
            <column caption='unit sold' datatype='integer' name='[Calculation_2151594779266154499]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([vin])' />
            </column>
            <column-instance column='[Calculation_2151594779266154499]' derivation='User' name='[usr:Calculation_2151594779266154499:qk]' pivot='key' type='quantitative' />
            <column caption='Vin' datatype='string' name='[vin]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='4' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='15' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266154499:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{ED841959-4F9B-44E7-B7FC-A0769AC715BB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='779' maxwidth='1366' minheight='779' minwidth='1366' sizing-mode='range' />
      <zones>
        <zone h='14891' id='3' name='TOTAL SALES' w='15154' x='512' y='11168'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='14634' id='4' name='Total Profit' w='15447' x='83748' y='11297'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='14763' id='5' name='Units Sold' w='14714' x='15813' y='11297'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='14634' id='6' name='Profit Margin' w='11567' x='71889' y='11425'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='39409' id='7' name='Sales Trend (line)' w='33382' x='36310' y='62773'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='36457' id='8' name='Sales YoY % (bar or line)' w='30161' x='439' y='26187'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='50834' id='9' name='Sales by Make (bar)' w='40703' x='30820' y='11553'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='39538' id='10' name='Top N Models (parameter)' w='35652' x='439' y='62901'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='35815' id='11' name='Profit vs MMR scatter' w='27526' x='71816' y='26444'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone h='39281' id='12' name='Inventory health (histogram)' w='29575' x='69839' y='62773'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='10013' id='13' type-v2='text' w='99414' x='439' y='899'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#998f8c' fontsize='20'>Sales details and profit summery</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2250' minheight='2250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97946' id='16' param='vert' type-v2='layout-flow' w='98828' x='586' y='1027'>
                <zone forceUpdate='true' h='10013' id='13' type-v2='text' w='99414' x='439' y='899'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#998f8c' fontsize='20'>Sales details and profit summery</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='14891' id='3' is-fixed='true' name='TOTAL SALES' w='15154' x='512' y='11168'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='105' h='14763' id='5' is-fixed='true' name='Units Sold' w='14714' x='15813' y='11297'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='104' h='14634' id='4' is-fixed='true' name='Total Profit' w='15447' x='83748' y='11297'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='104' h='14634' id='6' is-fixed='true' name='Profit Margin' w='11567' x='71889' y='11425'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50834' id='9' is-fixed='true' name='Sales by Make (bar)' w='40703' x='30820' y='11553'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='36457' id='8' is-fixed='true' name='Sales YoY % (bar or line)' w='30161' x='439' y='26187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='269' h='35815' id='11' is-fixed='true' name='Profit vs MMR scatter' w='27526' x='71816' y='26444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39409' id='7' is-fixed='true' name='Sales Trend (line)' w='33382' x='36310' y='62773'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39281' id='12' is-fixed='true' name='Inventory health (histogram)' w='29575' x='69839' y='62773'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39538' id='10' is-fixed='true' name='Top N Models (parameter)' w='35652' x='439' y='62901'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4FEC3047-E632-4E00-9724-C7A092DB5BC7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='TOTAL SALES'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D07F7407-18E3-4DED-A01B-D9200E54AAC2}' />
    </window>
    <window class='worksheet' name='Total Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{412A6342-42C6-4297-980A-61ECC46F6F16}' />
    </window>
    <window class='worksheet' name='Units Sold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{00837161-79ED-414B-8782-9DC0FB693C98}' />
    </window>
    <window class='worksheet' name='Profit Margin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BAB29F54-C117-4A7A-99EF-EBFD5ED86BC1}' />
    </window>
    <window class='worksheet' name='Sales Trend (line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.08fqj1804nft1p1h84aib1tljaox].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266801675:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08fqj1804nft1p1h84aib1tljaox].[yr:Calculation_2151594779266080770:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B16BA46-5ED6-4A99-B587-EEB73EB612D3}' />
    </window>
    <window class='worksheet' name='Sales YoY % (bar or line)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08fqj1804nft1p1h84aib1tljaox].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F1AD093-482C-47BC-B071-0DACD69036AA}' />
    </window>
    <window class='worksheet' name='Sales by Make (bar)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08fqj1804nft1p1h84aib1tljaox].[none:make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE67F5A1-26DF-4031-9DD0-55DAA8AD2467}' />
    </window>
    <window class='worksheet' name='Top N Models (parameter)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08fqj1804nft1p1h84aib1tljaox].[none:make:nk]</field>
            <field>[federated.08fqj1804nft1p1h84aib1tljaox].[none:model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBE3EE14-7D9D-41D9-8C3E-C08E790C723F}' />
    </window>
    <window class='worksheet' name='Profit vs MMR scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08fqj1804nft1p1h84aib1tljaox].[usr:Calculation_2151594779266506759:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.08fqj1804nft1p1h84aib1tljaox].[sum:sellingprice:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1A7AE5C7-EAD6-49D6-BB23-B47FC0D4A389}' />
    </window>
    <window class='worksheet' name='Inventory health (histogram)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08fqj1804nft1p1h84aib1tljaox].[none:Odometer (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED6838EE-0C2F-4555-9E19-D1AA9C352B69}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Inventory health (histogram)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit Margin'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit vs MMR scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Trend (line)'>
          <zoom type='entire-view' />
          <highlight field='[federated.08fqj1804nft1p1h84aib1tljaox].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sales YoY % (bar or line)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Make (bar)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TOTAL SALES'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top N Models (parameter)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Units Sold'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4B11C073-B96B-4DF6-A2F7-AAF2227721E6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      bDZoYEdqFgnH2kik8oh6mUgkRNlU8TvngvxUVaOUyxJqayM+naMt4qHRNMlkcuSzaYLR2M2b
      nG1iGpU8itVFSb/2Wo8khBB/+Id/yNGjR3nppZduYvO2uB4nTpzg3nvv5eWXX+bIkSNUKpUb
      Ein7WUMIk3w2i26aaBY7Xs/VY9NubtD5FlvcRCw2G5oAVbt20OWWA2yxKZEkGYdjaR3STT3U
      LKSmyFd1xsfHN7opW9yibOo3gNPl4Jvf+mvad9/LyKXzSHYXVCtY/G1MD73PvvseY0f76ncv
      t/jos6nfAIrNi83u5oG7d3Hq1PtUxoeYylUZGhxGcYa2Ov8Wm/sNAPDAxw+jSCrPPvs0NUPB
      XyjS1tWFRd3Uvr/FMtn0DhCJtjZ2tm+ELPEWtzyb3gE2CydOnFiguLDF2jDrAKdPn+bpp5/e
      yLZsMY98fmF1k4ceemiDWrK5UQEOHz5Mo7ExuvVbXJuHHnqI+++/n0pldRL1VzI6Osrk5OSa
      nGuzIAkhxB/90R/xta99baPbssU68tRTT9HX18c3vvGNjW7KLYUKLR3KvXv38vWvf32j27PF
      OvBnf/ZnlEotMdhnnnmG73znOxvcoluH2TlAIBDgiSee2Mi2bLFOvPTSS5w5cwZoZZ9ZrR89
      +cn1YmsxfIufaTbcAYxGjWL5yjxUg1yucFV7hMm5c+dZufjG2pEYHyRV2Jjc2bVAr1d4//Qp
      ktnF1zgxMUyxdn0FDL1R5dzZs5w9e5azZ89Ray5fMQOglJ4kkavO/vv0O29RqOkMDg6A2SS5
      RGne9PhFPhyKX9dmucw6gKjlef755/mD3/99nv/bvyVVXFqo6egPv83z338NgJd+9EMuZ1++
      9sI3ef57LwNQy8f5d7/9exSvkZpZzoxyqv/Kosc13jz63lXtz7/7BrjCKyrTuSJMnVOnP7iu
      SSjaxtHXX12vFqwvwuS7//Bd/MEwFy9ebH0kxKySxdTwRQo1AxDouj77oGlJt8yeBMMwePGl
      FzEMY5H8i6HrCz5r2cwcKUzyiVEm062VLbOWYzhVw21VOX/+PCBoztP4n5OjmWtPoKOXC6ff
      XpPLMTsHkGxevvCFL/Cdb3+bz3z2s5iNMt/77o/QVIm9dz/EZP871EyFbLbIJ5/7FFZFQlLs
      +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
    </thumbnail>
    <thumbnail height='192' name='Inventory health (histogram)' width='192'>
      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
      VPNWWwH8fwwlUmn9FTlcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='25' name='Profit Margin' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAZCAYAAACvrQlzAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADlUlEQVRoge2ZUUhbZxiGX0dKBROTiJDcxDDIkTiVNmxGR51Q0iE9aKlYsNCbYTEwSugK
      y8W6Qnvj1S4stDcr5M4NKUO2QnNhW7VNS3WFDGw1EauxQ0HakokpaDkH3l7MyEl6osf0HAbd
      eeBA+PJ97//zJv//fXAqSBImuvHJf72Bjw3TUJ0xDdUZ01CdMQ3VGdNQnTEN1RnTUJ0xDdUZ
      01CdMQ3VGdNQnTHQ0C08Gx5AqM6JCmcdQgPDeLa1d5X86i4GuwNwV1XBHejG4N1XkNUT8fjG
      QJkaMv6+9SO6g3VwVrkhhAZw489/ilU05KhAg1iJifSK1/l0kyQ3+fS6SK8Y48puRVKCUW8T
      L9x5SYmk9PIOLzR5GU1Iipwc50fPs93TyM5QU1ka2XiYwZM/86/cv7HNxWGeETo4lNpfjhoG
      GZpg1NvHkawyluVIn5fRROmqtZjI5itJKrcsJa+wWYxxLR8Y+57t50c5n5PIeLgMjRkONvdx
      ZKOwbiMepvfMb9zQnKOOMUc+PYWJth6ITmXQCbGnDRNT6RJFMqYfLqL3RAAWRdQSOIHexYeY
      zp/Zr39C4moP6q2WMjVW8MLahs9thZW246fQdXsCU9Cao44xhmYWkGuoR9F+YKtvQG4hU6Jo
      GUvpw/D7iuM++A+nsbSsZWEtGhYcSKWw8N7F/Cl8DUnMPteao45hTanGXmwnAJsdNbtW2VH9
      XpkN1fb9rLyXxlGc/e4xvv3mFyzlm+TWOuYSf2Aqs58cddTOzf7YWsfaen5VC6y1tbDa7MjM
      zEGGr2ABeW4GGfsXJYRsqHYmMZsGjvuV8TRmk07UqPw+5WlYELg8g2Xl15UOfPZVK+oOZtDo
      05qjzof/QysdcLvd208trBYAh1oRGp/Eo4IjI+PR5DhCrYdKCLnQcuQtxh6sFoZXH2Ds7RG0
      uLRspnwN+f4obrYfRdsu6lpyDOryEhNRgR1DqZ1uK6WG2CFEqZyAVp/8zntpRc9ciVEUwozv
      TAdZxsMCxViJYUuly2vRkHI5biprstO81FE4EmnJUcOwOZRSiteOuSh09jPS30nBdYzXijYT
      D4NfDi0UxLLxcxRcQZ6ORHg66KJwLk7l9DX+g59+//bjcex87o1lNGus/XqKHk8Lu/ojjPR3
      sdET5MXJghlPU44aFaSRr5FlvHn9Gm/k7btV642dv5crHXA7Kstbei+Nnbt/l71pySnCYEP/
      f7wDiwSAmZy3tggAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit vs MMR scatter' width='192'>
      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
      ToGE0v4PAm7uTxx9UxwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales Trend (line)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales YoY % (bar or line)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales by Make (bar)' width='192'>
      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
      /5c3YqxTBHl8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='39' name='TOTAL SALES' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAnCAYAAABZnUc9AAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKZklEQVR4nO2dfVAU9xnHv3ToVNY6HtbMHb6dWk/PkNOYUi0NYZKCNWHQweYSYkitr+dE
      JGgzJg10Gp0JmWRsu1g0E+hgRouNnRCs08kZtcYXrIil6sgYgpQXX4ATHEBP75jZm3n6x+7B
      cuzu7d4dYHP7mdmZ5fa+v5fnt8/+nt+zPyCGiAg6OlHKd8a6ATo6Y4nuADpRje4AOlGN7gA6
      UY3uADpRje4AOlGN7gA6UY3uADpRje4AOlGN7gA6UY3uADpRje4AOlGN7gA6UY3uADpRje4A
      OlFN7Fg3QEcnFPr7XOjrB4BxMJgMGBdiORGdAU4VzMf8+eoP+742rRWoKrfglLS8v+UYijem
      wWIaj5iYGOEYD9Oi5Sg83IL+UDvu60ZN2UakzYgXlRuD+Blp2FhWg27fCGnVNQ7dNWXYuCQe
      MTGbcHTUtIG0YZ9dxX1h34c22ebwtnrGNB5x8QlISEhAQkI84mLiMSNtI4rPdgyXPLiOY8X5
      WL7YAtP4mKHjbkkDKII4HSBA/ZHMNmkqv7UkVVW5DmeAsKeWWLuFmCA6c1Y5NXAaO93jpFwL
      o1guY8klZ0+EtUHhqOtKBeUvNojKc1CgaSKvleM45TIq7otkliTvCq6BStINytrAgW8todQg
      9UU0BJr60zzkfU/5O/eufIYD1S4AJtjmGTWVf/vmdf7E9AxWv/QkJsp870dTh/783/1bsa2y
      CQBgSMzE5vy3kLPcgkkAvO0nsXvzFuy+2Icbf8/DmweW4Yt1U4cXKkk79r1mx94mDwAz0gqK
      8OGGNEyNA+Btx8ndm7Fl90X0Ne2F/bWncP2LdZgaEa0y/S2H8ZtfvY4/n7sDj0pNJLSK3LmF
      VqHAJ5bn4bmZMt+b8jgmDPuwF0dzn0feP/sAMLDYC1Gy04Gn505G7AMXOpsv4MjHf8AH3w2Q
      +XzgADDGFKzIW421z6djwdQ4AIC3/QI+/eCtyM4AwWkiNlnwPlsRXdWkdVF5hoynB6uVTSYY
      FlN+VTN5pb7ANdAuf7tSS6hVbcGXdtA8gACGsg9JPaY5aivNEGaeebTjUoS0ijjJMfCEY8iY
      kk871s1T+RQPRxuE6u1kAghIJo0TP913OgQtQ6lsA8lN0hwXcMVVTUfOdEiPOa+gUc0C+c58
      hA9rAIBBzrt5sGlSd+BWM3+WZJmlSRmbmI/alloUr5wtvViKtSLzF0n8+Y1O3FFbsKsDjQCA
      5ViZES9VMMyrVmM5AKARHa4IaYPCwJiSj4orbbhdXYwc26RR0srjbr8JvgtWzJ6pRXkHn+0p
      47XJRSjfapXN3MTGBlwxpmBFaoLCAjl2NLNA7dhXxPIdsRXi7ReHT3SK+G7hBn/HwDZ3jibp
      zKXZmKlcOFqbvuZPpzyGH6gteMJEmAC44MZDDyAxdwOeh3ADAEyYOCFCWiU8Fqy/0oa9Cx/T
      PrjhaIPQPvD0ehxztRTuPo3jTv40O389tI28CrRNRqHDVW8ns+KUH4SGXZSkORxQh7f+fUoW
      pn5bkYbAjLtEO2zCAtrhpOG96iGnwyyEfDvoEhchrUaa2OSQw5hwtINwdGStEFplH6L7WqTH
      c4UwMIPKXeIi3dTd2asQ3gTHW7+LRskBeuhQtpDtMG+n6lAG0+kYjE3nWMlq5Y+fvZJHee+V
      0bE6pVhPDo5uHMmlRf7shNmhOePCNZRQuoFvl2VZAZUdq6OWzhaqO1ZGBcuEzJM5i8ol0kvh
      aLUw9g4gWvsZpg+MnfXHmbQu7x1iD56lRrd0Hwczfw6q6qijioJMetIozpwxZEzZQKXnu2TX
      Bn44dzd1drZQ3WGW3vDbN+Q+aeFqEdmEBi8tvR1SEYMDoZQytFNpvUo38DZTxRpRajSMG43r
      Ok97Xpor2aYnXi2l813y5YajVcvYO4B4cS13GGhxwQkK7K6acffr00tkFshN7MAMH+g4I+8A
      osq15v1Vw3XReTZLCLFATE6lzDTbQ7VF6WTwG4GxkJ2tlQg/1CIKU8xZxA55CnHUdZ6lLLNc
      mBOOVhtj7wDKeJurKHeR/6luI3EUOlD/rN9SrYyea2ApVZjFTdurZevhZ4BOunb2ILFvZFKi
      YcRnAI5ObzMJN1sOVWoK/rRynypzBCMyuXR82PUecuYOPvGZRblU1RxOBEl0vzJHKC+ZdsnM
      HlzDLuEBwFCOyADhaLXyqDsAEQ2JElJLWgc+dpVnCPWvpSOykyFHTocw9nIv0qTwNo9wGrR9
      H4pYPvllK3wbWhM/2piAhUkL+VMPh6E7CHz4pjgL9r1N8ICBZc0hNFzcg5WzQ91BwnPu+EH+
      ZVHyy8iySqc2Yq1ZeDkZADw4ePxcRLTfSmyLkCyccr7B0TPOTYQJAHAel+vlxLGwzF+ovc5x
      s0dyN6gP53a/jxMAwGSj8HVtWf9QcN/rkb7QfgBvFp6FB4DZUYnaT7IxI+w8nxeehxolDz3w
      hq39luK+j3tSn//kOaxgAKARnx+V9QC4OlpDqnbkHKD3c+zZewMAYM7dghel3vWo5hT+uPUw
      rj9Q2BnWexQffyK8KMhYgqdEl+r3F8PpAYClKPjdCwirKQPEwTiFfzahxomv2mW+1v4VnDX8
      qWmKEXFha///aPt0B4rPdipsNvThm/KP8A8AgAkpSaJsf+xSvLqJt1V9URH+1islP4Oqv/CR
      hiklSXhX4MbNlm4E3UsYXuAmz9UimxC7LSXViR9RHDh0wSxkERgjpWxg6ctr3TSQNePcdLOu
      jNYMbCozkcMpjpdbqSRVWPQm7aSazk7qVDwCc8uitUVgHCxqr9SaQmlxFyltYGLB2zu8TzU7
      k4RyfkkHA651i9KP4WiV7ORfRxgSM6mgoo5aer2iOq/Rl4WixIRUDH+7nDIYf6ZvDVWIbeVt
      poocs4Sd+NSrYfEGYg/X0c1haVaO3I0VI7QIvl9JOf5V+bbTQfOzfgadJvAmvkDvBtk1CWGx
      aMkNzJioScGJj4CbXNSX4YPDUUOJaPDE7yjmGEW7T6X2sISulbdTeDtyw9rNq2An11/ton4q
      HIZ0KpFJCPQ4HQNZPgBkmG4lq3X6EPsNtZPo3cNA1s9Ic6xWslrnkNHfVsnawoKjhl3+zIGW
      jU/VtN2kkPbj3NRYVUCZidJbYhljisxmt/AcYCALwaQSKzk4fMpylVy7LPaAFGe4WmU7jZUD
      BLOTt+MMlW5IGbzxhhwGSlzFBnnnwdvKLvUgNCTSqtL6gLHnyN1YRe+9Ilcnf8QQPRr/IcZ3
      5teY/iwLl9kB5+VSvKAQqPse3MXdmw2obeoBJlmwZP4MTJ78/RHY2NSOsp9Pw6YTDFLZ/+Ck
      wkYswIcHd6/j8r+awC/FJ8Hy9CLMVdUu9Votdho9tNipH32uTjRfvYrb3jhMW7AAP0wwwaA6
      IdePvq//jTNNvKXipi3A4sRZQfTiOoWPJlmwxDYbo7wdWg5//GgmR2i//TEyCLE2k8pq/0WZ
      EUK3U2R5NBxAiB/DfeMZaa4W2RRCn7FBt1NkeST+KoTnWhcmrf8TKn4fqRRlJGhFs/dZvLO/
      HFtlXlSNBbqdIssjswbQ0RkL/gfy8A3JeY2gsAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top N Models (parameter)' width='192'>
      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
      z//LAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='39' name='Total Profit' width='164'>
      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
      /7CGtLBg53/vEQDywZA33AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='25' name='Units Sold' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAZCAYAAACvrQlzAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAFC0lEQVRoge1Xf2xTZRQ9mpG4aYNbIFtMSjFZGUupZOKAxmUzgwVpljgipOAkuIYUkzHI
      giWxahyBTsKQMTYlGH4EJaTROamaigs/BgU3ZSy6EgqrSICNlU036Bu0yWty/KNdW9ryBuah
      ielJ3h/vy7nn3ne+9+533xMkiRRkw5P/dQH/N6QMlRkpQ2VGylCZkTJUZqQMlRkpQ2VGylCZ
      kTJUZqQMlRkpQ2VGylCZkSaPTC8OrtuL8/HLc1Zj16oXkocEx9B3fC8+aTmM9t8FAMBzRWtg
      +WAtFkyLlhUc7sR+y/toPHMzzKnFlnojdFOTlH6rHVut3+Nm0oRzsHrXKkSqCV7Htx9WY8sX
      Z3BOUGDmi4tg3r4DxgJFJCJw4RBq1lvQekKAonQp6pua8easp6StoBzw2Wh4aRM7Bwc5GHuN
      +h8c0/4Oi9YfYvcfo/STpCjw+qk6Fj9roG1kXLed1eoCVrddpiCGOJfbqlmgrma7L4mmKHA4
      vobBQQ52f8SXtVb2Roj9/LxCw4rGnzgkhlb8N7t5rMcb1erfR71KzxZX6Bn8rhbqVXru65e2
      Qh5De+qYZ3LIJJXHcSmfzcC8up6kHIMtmaPJILKjVsXK1ijf11pJVW0HRYkop1lFQ2RnQxix
      GagyOyWzydJDhT43FOrnZVAaRZ87gMnhr06RNQWBOz4E7+ME4bsTwJQsRZL4JBjYD+uxKmx4
      bZwvwPFVN6pWlkj0u0voOjkfS/SZ961m6pdg/skuXJJIJ4uhAzeuIHfqM/B6vfB6vbgdeHSN
      wO2L+Gbtq9gx7SDeLQovlm3G7rsbsWznadwYCyI4dgOndy7Dxru7sbnsYVSDONO0HVnvrUNB
      xL3fcP5UCeYWBHD7ohN2ux12uxN9Y7HbdhUeIR8z4vdMMQP5ggdXJTLKYmja9DJMPb8N9fX1
      qK+tROH0HMx6Yyd+GZ0o8iQs+flQ5zyNdPXb6K2w49S2EkTfi0wsbjqA0qMGFBZooS0ohOFo
      KQ40LUamhGoEo1+j5UgF1r4eyxZwx/slqtQ6rPz4NIYADF34FCuVuVjzQ0zBWZOR+A0oMDlr
      gpwP2Yj+ARw0wcRH66wi3Q066ho9JEmnOSdpr/TZDMyZoJfR18pKVS07EhplD+vyDEyUFWmv
      0jGU2klzThXt8bGinVU5ZkplfnxzaFCEmDHpEeeyNMzUaNHp9gAA/Pd8yEhPT2Clp2fAd88v
      qeRq3oQhywaUJBSgxSv6LnzXLsSt/4U/b01CWhoAzMa8BSfQcTaue5/twIkF8zBbKrH0Nj8M
      2rm1uo2Xhdjt9NPVUEy12Rk9ScVr7DxyjgPh267Wz/jrUNwrIA6xrSp6IvscJqqKG+iKnb78
      LjYUq2hyhDgjF37k8Utxr5vPQdMsEx0PGgQ8zSxWm+iIOcRFdwN1ukZ6xu+dZqqLG+kWIwQ2
      FqtpdkrNBrKMTX5eabOwXKOksrCcRmM5C5XZVC/dFy2GoVElI2YWHHBYWK7JZnZuIcuNNaxZ
      XspcpZKLrT9zJEbbtWcFNUolS5eHOEqlhiv2uDjusVWbcd9IRJKeRh211l5KYaTDwrlKTTh3
      EZWat2i7FmuWSHfzQmarF9FYY+QidTYXNrslRy1Srjk0DP9oaJAeFuLT9nNPmZZ1PYnliMJw
      eAAfZkJYlBQe2BM5KoONI8mjJkZEd5QP+gUZry/xmZLjMR5KMei1cmHs5y8bfBP+ufzb+Bvi
      FDmaJh1eWAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
